name: Release

on:
  release:
    types: [published]

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0
  CARGO_PROFILE_DEV_DEBUG: 0
  RUST_BACKTRACE: short

jobs:
  build-sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          submodules: recursive

      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install maturin
        run: pip install maturin

      - name: Build sdist
        run: maturin sdist --manifest-path crates/kreuzberg-py/Cargo.toml

      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: target/wheels/*.tar.gz
          retention-days: 1

  build-wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          submodules: recursive

      - name: Build wheels
        uses: ./.github/actions/build-wheels

  publish:
    name: Publish to PyPI
    needs: [build-sdist, build-wheels]
    runs-on: ubuntu-latest
    environment: pypi
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download sdist
        uses: actions/download-artifact@v4
        with:
          name: sdist
          path: dist/

      - name: Download wheels (Linux)
        uses: actions/download-artifact@v4
        with:
          name: wheels-Linux
          path: dist/

      - name: Download wheels (Windows)
        uses: actions/download-artifact@v4
        with:
          name: wheels-Windows
          path: dist/

      - name: Download wheels (macOS)
        uses: actions/download-artifact@v4
        with:
          name: wheels-macOS
          path: dist/

      - name: List distribution files
        run: ls -lh dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

      - name: Docker Build Info
        run: |
          echo "Docker images will be built automatically by the publish-docker.yml workflow"
          echo "triggered by this release event. No manual triggering needed."
