[dependency-groups]
dev = [
  "covdefaults>=2.3.0",
  "maturin>=1.9.6",
  "memory-profiler>=0.61.0",
  "mypy>=1.18.2",
  "pytest>=8.4.2",
  "pytest-benchmark>=5.1.0",
  "pytest-cov>=7.0.0",
  "pytest-mock>=3.15.1",
  "pytest-rerunfailures>=16.1",
  "pytest-timeout>=2.4.0",
  "rich>=14.2.0",
  "ruff>=0.14.0",
  "tabulate>=0.9.0",
  "trio>=0.31.0",
  "types-psutil>=7.0.0.20250822",
  "types-pyyaml>=6.0.12.20250915",
  "uv-bump",
]
doc = [
  "mkdocs>=1.6.1",
  "mkdocs-git-revision-date-localized-plugin>=1.4.5",
  "mkdocs-material[imaging]>=9.6.9",
  "mkdocs-minify-plugin>=0.8.0",
  "mkdocstrings[python]>=0.29.0",
]

[tool.uv]
cache-keys = [
  { file = "pyproject.toml" },
  { file = "Cargo.toml" },
  { file = "Cargo.lock" },
  { file = "crates/**/*.rs" },
  { file = "crates/**/Cargo.toml" },
]

[tool.uv.workspace]
members = [ "comparative-benchmarks", "packages/python" ]

[tool.uv.sources]
uv-bump = { git = "https://github.com/Goldziher/uv-bump" }

[tool.ruff]
target-version = "py310"
line-length = 120
src = [ "kreuzberg/_legacy", "packages/python/kreuzberg", "packages/python/tests" ]
format.docstring-code-line-length = 120
format.docstring-code-format = true
lint.select = [ "ALL" ]
lint.ignore = [
  "ANN401",  # Dynamically typed ANY for kwargs
  "COM812",  # Conflicts with formatter
  "D100",    # Missing docstring in public module
  "D104",    # Missing docstring in public package
  "D107",    # Missing docstring in __init__
  "D205",    # 1 blank line required between summary line and description
  "E501",    # Line too long, handled by ruff format
  "EM",      # Exception messages,
  "FBT",     # Boolean-typed positional argument in function definition
  "FIX",     # We allow todo and fixme comments
  "ISC001",  # Conflicts with formatter
  "PLR2004", # Magic value used in comparison
  "PLW0603", # Using global statement is discouraged
  "S110",    # try-except-pass detected
  "S603",    # subprocess-without-shell-equals-true
  "TD",      # We allow todo and fixme comments
  "TRY",     # Try except block, rules are too strict
]
lint.per-file-ignores."**/tests/**/*.*" = [
  "A005",    # Module shadows standard library
  "ANN",     # Disable all annotation rules for tests
  "ARG001",
  "ARG002",  # Unused method argument
  "BLE001",  # Disable blind exception catching for tests
  "D",
  "N806",    # Variable naming in tests
  "N815",
  "PD",
  "PGH003",
  "PLC",     # Disable all PLC rules for tests
  "PLR0915",
  "PLR2004",
  "PT006",
  "PT007",
  "PT013",
  "PT017",   # Assertion on exception in except block
  "PT031",   # pytest.warns block should contain single statement
  "RUF012",
  "S",
  "SIM117",  # Combine with statements
  "SLF001",
]
lint.per-file-ignores."benchmarks/**/*.*" = [
  "BLE001",  # Blind exception catching (common in benchmarks)
  "C901",    # Function complexity (benchmarks can be complex)
  "D101",    # Missing docstring in public class
  "D102",    # Missing docstring in public method
  "D103",    # Missing docstring in public function
  "D105",    # Missing docstring in magic method
  "PERF203", # Try-except within a loop (acceptable in benchmarks)
  "PLC0415", # Import at top level (conditional imports for optional deps)
  "PLR0912", # Too many branches
  "PLR0913", # Too many arguments
  "PLR0915", # Too many statements
  "S101",
  "S110",    # Try-except-pass (acceptable in benchmarks)
  "SLF001",  # Private member access (needed for benchmark configuration)
]
lint.per-file-ignores."packages/python/tests/e2e/*_test.py" = [
  "T201", # print statements are needed for test output
]
lint.isort.known-first-party = [ "kreuzberg" ]
lint.mccabe.max-complexity = 15
lint.pydocstyle.convention = "google"
lint.pylint.max-args = 10
lint.pylint.max-branches = 15
lint.pylint.max-returns = 10

[tool.codespell]
ignore-words-list = "addin,inh,te,tha,vie,mis,ment,bu,ned,inout"
skip = "kreuzberg/_token_reduction/stopwords/*"

[tool.pyproject-fmt]
keep_full_version = true
max_supported_python = "3.14"

[tool.pytest.ini_options]
timeout = 300
testpaths = [ "packages/python/tests" ]
norecursedirs = [
  "dist",
  "build",
  "*.egg",
]
markers = [
  "slow: marks tests as slow (deselect with '-m \"not slow\"')",
  "integration: marks tests as integration tests",
]
filterwarnings = [
  "ignore:Exception ignored in:pytest.PytestUnraisableExceptionWarning",
  "ignore:pkg_resources is deprecated as an API:DeprecationWarning",
  "ignore:ast.Num is deprecated and will be removed in Python 3.14:DeprecationWarning",
  "ignore:datetime.datetime.utcfromtimestamp() is deprecated:DeprecationWarning",
  "ignore:Deprecated call to `pkg_resources.declare_namespace('google')`:DeprecationWarning",
]

[tool.coverage.run]
branch = true
omit = [
  "tests/*",
  "scripts/*",
  "benchmarks/*",
  "kreuzberg/_legacy/*",
]
plugins = [ "covdefaults" ]
source = [ "packages/python/kreuzberg" ]

[tool.coverage.report]
fail_under = 85
exclude_lines = [
  'if TYPE_CHECKING:',
  "except ImportError:",
  "pragma: no cover",
  "if sys.version_info",
  "raise NotImplementedError",
  "if __name__ == .__main__.:",
  "def __repr__",
  "class .*\\bProtocol\\):",
  "@(abc\\.)?abstractmethod",
]

[tool.mypy]
packages = [ "kreuzberg" ]
mypy_path = "packages/python"
exclude = [ "comparative-benchmarks", "kreuzberg/_legacy" ]
python_version = "3.10"
implicit_reexport = false
show_error_codes = true
strict = true

[[tool.mypy.overrides]]
module = [
  "easyocr",
  "paddleocr",
  "deep_translator",
  "pypdfium2",
  "chardetng_py",
  "fast_langdetect",
  "mailparse",
  "keybert",
]
ignore_missing_imports = true
